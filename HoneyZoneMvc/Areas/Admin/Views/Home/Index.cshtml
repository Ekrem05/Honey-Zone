@using System.Text
@model StatisticsViewModel

@if (@TempData["Error"]!=null)
{
    <div class="alert alert-danger alert-dismissible mt-2">
        @TempData["Error"]
        <a href="#" class="btn btn-close close" data-dismiss="alert" aria-label="close"></a>
    </div>
}
@if (@TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible mt-2">
        @TempData["Success"]
        <a href="#" class="btn btn-close close" data-dismiss="alert" aria-label="close"></a>
    </div>
}

<partial name="_AdminNavPartialView"/>
<div class="bg-black w-10 d-flex mt-5 p-lg-5">
    <div class="bg-white w-10 p-lg-5">
        <h2>Products sold per category</h2>
        <canvas id="myChart"></canvas>
    </div>
    <div class="bg-black w-10">
        <canvas id="myChart"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: [
              
                    @Html.Raw(Model.CategoryStatistic.GetCategoryLabels())
            ],
            datasets: [{
                label: 'Sold Items',
                data: [
                       @Model.CategoryStatistic.GetCategoryData()
                    ],
                backgroundColor: [

                    @foreach (var item in Model.CategoryStatistic.ProductsSoldInCategory)
                    {
                        Random rnd = new Random();
                        int valueR = rnd.Next(0,255);
                        int valueG = rnd.Next(0,255);
                        int valueB = rnd.Next(0, 255);

                        @: 'rgb(@valueR, @valueG, @valueB)',
                    }
                ],
                hoverOffset: 4
            }]
        }
    });
</script>


@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}